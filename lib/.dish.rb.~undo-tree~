(undo-tree-save-format-version . 1)
"7c338ed2840d2bf55f9f5e4eed04f66c80840eb3"
[nil nil nil nil (25155 55204 586900 0) 0 nil]
([nil nil ((10 . 11) (9 . 11) (#("'" 0 1 (fontified nil)) . -9) (1 . 10) (t 25155 7870 241459 995000)) nil (25155 55204 586899 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . -10) (undo-tree-id762 . -1) 11) nil (25155 55204 586898 0) 0 nil])
([nil nil ((10 . 19)) nil (25155 55204 586897 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified nil face font-lock-string-face)) . 20) (undo-tree-id761 . -1) (19 . 20)) nil (25155 55204 586896 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 197 . 198) (nil fontified nil 20 . 198) (20 . 198)) nil (25155 55204 586895 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 375 . 376) (nil fontified nil 198 . 376) (198 . 376)) nil (25155 55204 586894 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -375) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) 376) nil (25155 55204 586893 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -354) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (#("t" 0 1 (fontified t)) . -355) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (#("e" 0 1 (fontified t)) . -356) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (#("c" 0 1 (fontified t)) . -357) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#("h" 0 1 (fontified t)) . -358) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (#("a" 0 1 (fontified t)) . -359) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("r" 0 1 (fontified t)) . -360) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (#(">" 0 1 (fontified t)) . -361) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (#(" " 0 1 (fontified t)) . -362) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (#("i" 0 1 (fontified t)) . -363) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (#("s" 0 1 (fontified t)) . -364) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (#(" " 0 1 (fontified t)) . -365) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (#("u" 0 1 (fontified t)) . -366) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (#("n" 0 1 (fontified t)) . -367) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (#("d" 0 1 (fontified t)) . -368) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (#("e" 0 1 (fontified t)) . -369) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -370) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (#("i" 0 1 (fontified t)) . -371) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (#("n" 0 1 (fontified t)) . -372) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (#("e" 0 1 (fontified t)) . -373) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (#("d" 0 1 (fontified t)) . -374) (undo-tree-id756 . -1) (undo-tree-id757 . -1) 375) nil (25155 55204 586889 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -333) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (#("s" 0 1 (fontified t)) . -334) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (#(" " 0 1 (fontified t)) . -335) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (#("u" 0 1 (fontified t)) . -336) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (#("n" 0 1 (fontified t)) . -337) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("d" 0 1 (fontified t)) . -338) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#("e" 0 1 (fontified t)) . -339) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -340) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (#("i" 0 1 (fontified t)) . -341) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("n" 0 1 (fontified t)) . -342) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#("e" 0 1 (fontified t)) . -343) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (#("d" 0 1 (fontified t)) . -344) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#("
" 0 1 (fontified t)) . -345) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (#("C" 0 1 (fontified t face font-lock-type-face)) . -346) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (#("-" 0 1 (fontified t)) . -347) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (#("x" 0 1 (fontified t)) . -348) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#(" " 0 1 (fontified t)) . -349) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("<" 0 1 (fontified t)) . -350) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (#("d" 0 1 (fontified t)) . -351) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (#("e" 0 1 (fontified t)) . -352) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (#("l" 0 1 (fontified t)) . -353) (undo-tree-id714 . -1) (undo-tree-id715 . -1) 354) nil (25155 55204 586852 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -311) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#("u" 0 1 (fontified t)) . -312) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (#("n" 0 1 (fontified t)) . -313) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (#("d" 0 1 (fontified t)) . -314) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (#("e" 0 1 (fontified t)) . -315) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -316) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (#("i" 0 1 (fontified t)) . -317) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (#("n" 0 1 (fontified t)) . -318) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (#("e" 0 1 (fontified t)) . -319) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#("d" 0 1 (fontified t)) . -320) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (#("
" 0 1 (fontified t)) . -321) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (#("C" 0 1 (fontified t face font-lock-type-face)) . -322) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#("-" 0 1 (fontified t)) . -323) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (#("x" 0 1 (fontified t)) . -324) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (#(" " 0 1 (fontified t)) . -325) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#("<" 0 1 (fontified t)) . -326) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (#("d" 0 1 (fontified nil face font-lock-keyword-face)) . -327) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -328) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (#("w" 0 1 (fontified t)) . -329) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (#("n" 0 1 (fontified t)) . -330) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (#(">" 0 1 (fontified t)) . -331) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#(" " 0 1 (fontified t)) . -332) (undo-tree-id671 . -1) (undo-tree-id672 . -1) 333) nil (25155 55204 586829 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -290) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -291) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (#(" " 0 1 (fontified t)) . -292) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (#("t" 0 1 (fontified t)) . -293) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (#("i" 0 1 (fontified t)) . -294) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#("m" 0 1 (fontified t)) . -295) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (#("e" 0 1 (fontified t)) . -296) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#("s" 0 1 (fontified t)) . -297) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -298) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (#("
" 0 1 (fontified t)) . -299) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("C" 0 1 (fontified t face font-lock-type-face)) . -300) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (#("-" 0 1 (fontified t)) . -301) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (#("x" 0 1 (fontified t)) . -302) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (#(" " 0 1 (fontified t)) . -303) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#("<" 0 1 (fontified t)) . -304) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("u" 0 1 (fontified t)) . -305) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#("p" 0 1 (fontified t)) . -306) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (#(">" 0 1 (fontified t)) . -307) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (#(" " 0 1 (fontified t)) . -308) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#("i" 0 1 (fontified t)) . -309) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#("s" 0 1 (fontified t)) . -310) (undo-tree-id626 . -1) (undo-tree-id627 . -1) 311) nil (25155 55204 586803 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -269) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#("o" 0 1 (fontified t)) . -270) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("l" 0 1 (fontified t)) . -271) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (#("e" 0 1 (fontified t)) . -272) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#(" " 0 1 (fontified t)) . -273) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#("o" 0 1 (fontified t)) . -274) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -275) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (#("d" 0 1 (fontified t)) . -276) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("i" 0 1 (fontified t)) . -277) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("n" 0 1 (fontified t)) . -278) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (#("a" 0 1 (fontified t)) . -279) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (#("r" 0 1 (fontified t)) . -280) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (#("y" 0 1 (fontified t)) . -281) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (#(" " 0 1 (fontified t)) . -282) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("w" 0 1 (fontified t)) . -283) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (#("i" 0 1 (fontified t)) . -284) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (#("n" 0 1 (fontified t)) . -285) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (#("d" 0 1 (fontified t)) . -286) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#("o" 0 1 (fontified t)) . -287) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#("w" 0 1 (fontified t)) . -288) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#(" " 0 1 (fontified t)) . -289) (undo-tree-id583 . -1) (undo-tree-id584 . -1) 290) nil (25155 55204 586777 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -259) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (#("u" 0 1 (fontified t)) . -260) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (#("f" 0 1 (fontified t)) . -261) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (#("f" 0 1 (fontified t)) . -262) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("e" 0 1 (fontified t)) . -263) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("r" 0 1 (fontified t)) . -264) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (#(" " 0 1 (fontified t)) . -265) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("o" 0 1 (fontified t)) . -266) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -267) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (#(" " 0 1 (fontified t)) . -268) (undo-tree-id541 . -1) (undo-tree-id542 . -1) 269) nil (25155 55204 586752 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . -238) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -239) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -240) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -241) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -242) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -243) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (#(" " 0 1 (fontified t)) . -244) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#("t" 0 1 (fontified t)) . -245) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (#("o" 0 1 (fontified t)) . -246) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (#(" " 0 1 (fontified t)) . -247) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (#("d" 0 1 (fontified t)) . -248) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#("e" 0 1 (fontified t)) . -249) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#("l" 0 1 (fontified t)) . -250) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("e" 0 1 (fontified t)) . -251) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("t" 0 1 (fontified t)) . -252) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("e" 0 1 (fontified t)) . -253) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#(" " 0 1 (fontified t)) . -254) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#("m" 0 1 (fontified t)) . -255) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#("i" 0 1 (fontified t)) . -256) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("n" 0 1 (fontified t)) . -257) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("i" 0 1 (fontified t)) . -258) (undo-tree-id521 . -1) (undo-tree-id522 . -1) 259) nil (25155 55204 586739 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -217) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("n" 0 1 (fontified t)) . -218) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("e" 0 1 (fontified t)) . -219) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("d" 0 1 (fontified t)) . -220) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("
" 0 1 (fontified t)) . -221) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (#("d" 0 1 (fontified t)) . -222) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("e" 0 1 (fontified t)) . -223) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("l" 0 1 (fontified t)) . -224) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (#("e" 0 1 (fontified t)) . -225) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (#("t" 0 1 (fontified t)) . -226) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("e" 0 1 (fontified t)) . -227) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#("-" 0 1 (fontified t)) . -228) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (#("w" 0 1 (fontified t)) . -229) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (#("i" 0 1 (fontified t)) . -230) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (#("n" 0 1 (fontified t)) . -231) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (#("d" 0 1 (fontified t)) . -232) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (#("o" 0 1 (fontified t)) . -233) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (#("w" 0 1 (fontified t)) . -234) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (#(":" 0 1 (fontified t)) . -235) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (#(" " 0 1 (fontified t)) . -236) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("A" 0 1 (fontified t face font-lock-type-face)) . -237) (undo-tree-id479 . -1) (undo-tree-id480 . -1) 238) nil (25155 55204 586699 0) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -207) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (#(" " 0 1 (fontified t)) . -208) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("i" 0 1 (fontified t)) . -209) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (#("s" 0 1 (fontified t)) . -210) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#(" " 0 1 (fontified t)) . -211) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#("u" 0 1 (fontified t)) . -212) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (#("n" 0 1 (fontified t)) . -213) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("d" 0 1 (fontified t)) . -214) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (#("e" 0 1 (fontified t)) . -215) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -216) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 217) nil (25155 55204 586677 0) 0 nil])
([nil nil ((#("down" 0 4 (fontified t)) . -203) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) 207) nil (25155 55204 586667 0) 0 nil])
([nil nil ((#("x <" 0 3 (fontified t)) . -200) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) 203) nil (25155 55204 586665 0) 0 nil])
([nil nil ((#("C-" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t)) . -198) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) 200) nil (25155 55204 586662 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -168) (undo-tree-id405 . -1) (168 . 169)) nil (25155 55204 586660 0) 0 nil])
([nil nil ((168 . 170)) nil (25155 55204 586659 0) 0 nil])
([nil nil ((170 . 171)) nil (25155 55204 586658 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -168) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("p" 0 1 (fontified t)) . -169) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("o" 0 1 (fontified t)) . -170) (undo-tree-id404 . -1) 171) nil (25155 55204 586657 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 197) (undo-tree-id384 . -1) (undo-tree-id385 . -1)) nil (25155 55204 586647 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 167) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1)) nil (25155 55204 586645 0) 0 nil])
([nil nil ((#("C-x <deletechar> is undefined" 0 1 (fontified t) 1 29 (fontified t)) . 167) (undo-tree-id332 . -29) (undo-tree-id333 . -29)) nil (25155 55204 586623 0) 0 nil])
([nil nil ((#("C-x <up> is undefined" 0 1 (fontified t face font-lock-type-face) 1 21 (fontified t)) . 122)) nil (25155 55204 586622 0) 0 nil])
([nil nil ((#("C-x <down> is undefined" 0 1 (fontified t face font-lock-type-face) 1 23 (fontified t)) . 123) (undo-tree-id281 . -23) (undo-tree-id282 . -23) (undo-tree-id283 . -23) (undo-tree-id284 . -23) (undo-tree-id285 . -23) (undo-tree-id286 . -23) (undo-tree-id287 . -23) (undo-tree-id288 . -23) (undo-tree-id289 . -23) (undo-tree-id290 . -23) (undo-tree-id291 . -23) (undo-tree-id292 . -23) (undo-tree-id293 . -23) (undo-tree-id294 . -23) (undo-tree-id295 . -23) (undo-tree-id296 . -23) (undo-tree-id297 . -23) (undo-tree-id298 . -23) (undo-tree-id299 . -23) (undo-tree-id300 . -23) (undo-tree-id301 . -23) (undo-tree-id302 . -23) (undo-tree-id303 . -23) (undo-tree-id304 . -23) (undo-tree-id305 . -23) (undo-tree-id306 . -23) (undo-tree-id307 . -23) (undo-tree-id308 . -23) (undo-tree-id309 . -23) (undo-tree-id310 . -23) (undo-tree-id311 . -23) (undo-tree-id312 . -23) (undo-tree-id313 . -23) (undo-tree-id314 . -23) (undo-tree-id315 . -23) (undo-tree-id316 . -23) (undo-tree-id317 . -23) (undo-tree-id318 . -23) (undo-tree-id319 . -23) (undo-tree-id320 . -23) (undo-tree-id321 . -23) (undo-tree-id322 . -23) (undo-tree-id323 . -23) (undo-tree-id324 . -23) (undo-tree-id325 . -23) (undo-tree-id326 . -23) (undo-tree-id327 . -23) (undo-tree-id328 . -23) (undo-tree-id329 . -23) (undo-tree-id330 . -23) (undo-tree-id331 . -23)) nil (25155 55204 586620 0) 0 nil])
([nil nil ((#("delete-window: Attempt to delete minibuffer or sole ordinary window [2 times]" 0 15 (fontified t) 15 22 (fontified t face font-lock-type-face) 22 44 (fontified t) 44 46 (fontified t face font-lock-keyword-face) 46 68 (fontified t) 68 69 (fontified t face (rainbow-delimiters-depth-1-face)) 69 70 (fontified t face highlight-numbers-number) 70 76 (fontified t) 76 77 (fontified t face (rainbow-delimiters-depth-1-face))) . 44)) nil (25155 55204 586589 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -21) (undo-tree-id259 . -1) (#("x" 0 1 (fontified t)) . -22) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -23) (undo-tree-id261 . -1) (#("<" 0 1 (fontified t)) . -24) (undo-tree-id262 . -1) (#("d" 0 1 (fontified nil face font-lock-keyword-face)) . -25) (undo-tree-id263 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -26) (undo-tree-id264 . -1) (#("w" 0 1 (fontified t)) . -27) (undo-tree-id265 . -1) (#("n" 0 1 (fontified t)) . -28) (undo-tree-id266 . -1) (#(">" 0 1 (fontified t)) . -29) (undo-tree-id267 . -1) (#(" " 0 1 (fontified t)) . -30) (undo-tree-id268 . -1) (#("i" 0 1 (fontified t)) . -31) (undo-tree-id269 . -1) (#("s" 0 1 (fontified t)) . -32) (undo-tree-id270 . -1) (#(" " 0 1 (fontified t)) . -33) (undo-tree-id271 . -1) (#("u" 0 1 (fontified t)) . -34) (undo-tree-id272 . -1) (#("n" 0 1 (fontified t)) . -35) (undo-tree-id273 . -1) (#("d" 0 1 (fontified t)) . -36) (undo-tree-id274 . -1) (#("e" 0 1 (fontified t)) . -37) (undo-tree-id275 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -38) (undo-tree-id276 . -1) (#("i" 0 1 (fontified t)) . -39) (undo-tree-id277 . -1) (#("n" 0 1 (fontified t)) . -40) (undo-tree-id278 . -1) (#("e" 0 1 (fontified t)) . -41) (undo-tree-id279 . -1) (#("d" 0 1 (fontified t)) . -42) (undo-tree-id280 . -1) 43) nil (25155 55204 586586 0) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -20) (undo-tree-id258 . -1) 21) nil (25155 55204 586573 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 96 . 97) (nil fontified nil 96 . 97) (nil fontified nil 90 . 96) (nil fontified nil 89 . 90) (nil fontified nil 88 . 89) (nil fontified nil 66 . 88) (nil fontified nil 64 . 66) (nil fontified nil 42 . 64) (nil fontified nil 35 . 42) (nil fontified nil 20 . 35) (20 . 97)) nil (25155 55204 586572 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -76) (undo-tree-id237 . -1) (#("a" 0 1 (fontified t)) . -77) (undo-tree-id238 . -1) (#("r" 0 1 (fontified t)) . -78) (undo-tree-id239 . -1) (#("y" 0 1 (fontified t)) . -79) (undo-tree-id240 . -1) (#(" " 0 1 (fontified t)) . -80) (undo-tree-id241 . -1) (#("w" 0 1 (fontified t)) . -81) (undo-tree-id242 . -1) (#("i" 0 1 (fontified t)) . -82) (undo-tree-id243 . -1) (#("n" 0 1 (fontified t)) . -83) (undo-tree-id244 . -1) (#("d" 0 1 (fontified t)) . -84) (undo-tree-id245 . -1) (#("o" 0 1 (fontified t)) . -85) (undo-tree-id246 . -1) (#("w" 0 1 (fontified t)) . -86) (undo-tree-id247 . -1) (#(" " 0 1 (fontified t)) . -87) (undo-tree-id248 . -1) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -88) (undo-tree-id249 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -89) (undo-tree-id250 . -1) (#(" " 0 1 (fontified t)) . -90) (undo-tree-id251 . -1) (#("t" 0 1 (fontified t)) . -91) (undo-tree-id252 . -1) (#("i" 0 1 (fontified t)) . -92) (undo-tree-id253 . -1) (#("m" 0 1 (fontified t)) . -93) (undo-tree-id254 . -1) (#("e" 0 1 (fontified t)) . -94) (undo-tree-id255 . -1) (#("s" 0 1 (fontified t)) . -95) (undo-tree-id256 . -1) (#("]" 0 1 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . -96) (undo-tree-id257 . -1) 97) nil (25155 55204 586568 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -55) (undo-tree-id216 . -1) (#("i" 0 1 (fontified t)) . -56) (undo-tree-id217 . -1) (#("b" 0 1 (fontified t)) . -57) (undo-tree-id218 . -1) (#("u" 0 1 (fontified t)) . -58) (undo-tree-id219 . -1) (#("f" 0 1 (fontified t)) . -59) (undo-tree-id220 . -1) (#("f" 0 1 (fontified t)) . -60) (undo-tree-id221 . -1) (#("e" 0 1 (fontified t)) . -61) (undo-tree-id222 . -1) (#("r" 0 1 (fontified t)) . -62) (undo-tree-id223 . -1) (#(" " 0 1 (fontified t)) . -63) (undo-tree-id224 . -1) (#("o" 0 1 (fontified t)) . -64) (undo-tree-id225 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -65) (undo-tree-id226 . -1) (#(" " 0 1 (fontified t)) . -66) (undo-tree-id227 . -1) (#("s" 0 1 (fontified t)) . -67) (undo-tree-id228 . -1) (#("o" 0 1 (fontified t)) . -68) (undo-tree-id229 . -1) (#("l" 0 1 (fontified t)) . -69) (undo-tree-id230 . -1) (#("e" 0 1 (fontified t)) . -70) (undo-tree-id231 . -1) (#(" " 0 1 (fontified t)) . -71) (undo-tree-id232 . -1) (#("o" 0 1 (fontified t)) . -72) (undo-tree-id233 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -73) (undo-tree-id234 . -1) (#("d" 0 1 (fontified t)) . -74) (undo-tree-id235 . -1) (#("i" 0 1 (fontified t)) . -75) (undo-tree-id236 . -1) 76) nil (25155 55204 586554 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -34) (undo-tree-id195 . -1) (#("A" 0 1 (fontified t face font-lock-type-face)) . -35) (undo-tree-id196 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -36) (undo-tree-id197 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -37) (undo-tree-id198 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -38) (undo-tree-id199 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -39) (undo-tree-id200 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -40) (undo-tree-id201 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -41) (undo-tree-id202 . -1) (#(" " 0 1 (fontified t)) . -42) (undo-tree-id203 . -1) (#("t" 0 1 (fontified t)) . -43) (undo-tree-id204 . -1) (#("o" 0 1 (fontified t)) . -44) (undo-tree-id205 . -1) (#(" " 0 1 (fontified t)) . -45) (undo-tree-id206 . -1) (#("d" 0 1 (fontified t)) . -46) (undo-tree-id207 . -1) (#("e" 0 1 (fontified t)) . -47) (undo-tree-id208 . -1) (#("l" 0 1 (fontified t)) . -48) (undo-tree-id209 . -1) (#("e" 0 1 (fontified t)) . -49) (undo-tree-id210 . -1) (#("t" 0 1 (fontified t)) . -50) (undo-tree-id211 . -1) (#("e" 0 1 (fontified t)) . -51) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -52) (undo-tree-id213 . -1) (#("m" 0 1 (fontified t)) . -53) (undo-tree-id214 . -1) (#("i" 0 1 (fontified t)) . -54) (undo-tree-id215 . -1) 55) nil (25155 55204 586529 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -22) (undo-tree-id183 . -1) (#("e" 0 1 (fontified t)) . -23) (undo-tree-id184 . -1) (#("t" 0 1 (fontified t)) . -24) (undo-tree-id185 . -1) (#("e" 0 1 (fontified t)) . -25) (undo-tree-id186 . -1) (#("-" 0 1 (fontified t)) . -26) (undo-tree-id187 . -1) (#("w" 0 1 (fontified t)) . -27) (undo-tree-id188 . -1) (#("i" 0 1 (fontified t)) . -28) (undo-tree-id189 . -1) (#("n" 0 1 (fontified t)) . -29) (undo-tree-id190 . -1) (#("d" 0 1 (fontified t)) . -30) (undo-tree-id191 . -1) (#("o" 0 1 (fontified t)) . -31) (undo-tree-id192 . -1) (#("w" 0 1 (fontified t)) . -32) (undo-tree-id193 . -1) (#(":" 0 1 (fontified t)) . -33) (undo-tree-id194 . -1) 34) nil (25155 55204 586515 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -20) (undo-tree-id181 . -1) (#("e" 0 1 (fontified t)) . -21) (undo-tree-id182 . -1) 22) nil (25155 55204 586508 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 77 . 78) (nil fontified nil 77 . 78) (nil fontified nil 71 . 77) (nil fontified nil 70 . 71) (nil fontified nil 69 . 70) (nil fontified nil 47 . 69) (nil fontified nil 45 . 47) (nil fontified nil 23 . 45) (nil fontified nil 16 . 23) (nil fontified nil 1 . 16) (1 . 78) (#("c" 0 1 (fontified t)) . -1) (undo-tree-id179 . -1) (#("u" 0 1 (fontified t)) . -2) (undo-tree-id180 . -1) 3 (1 . 3)) nil (25155 55204 586504 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . -77) (undo-tree-id178 . -1) 78) nil (25155 55204 586501 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -56) (undo-tree-id157 . -1) (#("n" 0 1 (fontified t)) . -57) (undo-tree-id158 . -1) (#("a" 0 1 (fontified t)) . -58) (undo-tree-id159 . -1) (#("r" 0 1 (fontified t)) . -59) (undo-tree-id160 . -1) (#("y" 0 1 (fontified t)) . -60) (undo-tree-id161 . -1) (#(" " 0 1 (fontified t)) . -61) (undo-tree-id162 . -1) (#("w" 0 1 (fontified t)) . -62) (undo-tree-id163 . -1) (#("i" 0 1 (fontified t)) . -63) (undo-tree-id164 . -1) (#("n" 0 1 (fontified t)) . -64) (undo-tree-id165 . -1) (#("d" 0 1 (fontified t)) . -65) (undo-tree-id166 . -1) (#("o" 0 1 (fontified t)) . -66) (undo-tree-id167 . -1) (#("w" 0 1 (fontified t)) . -67) (undo-tree-id168 . -1) (#(" " 0 1 (fontified t)) . -68) (undo-tree-id169 . -1) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -69) (undo-tree-id170 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -70) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t)) . -71) (undo-tree-id172 . -1) (#("t" 0 1 (fontified t)) . -72) (undo-tree-id173 . -1) (#("i" 0 1 (fontified t)) . -73) (undo-tree-id174 . -1) (#("m" 0 1 (fontified t)) . -74) (undo-tree-id175 . -1) (#("e" 0 1 (fontified t)) . -75) (undo-tree-id176 . -1) (#("s" 0 1 (fontified t)) . -76) (undo-tree-id177 . -1) 77) nil (25155 55204 586497 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -35) (undo-tree-id136 . -1) (#("n" 0 1 (fontified t)) . -36) (undo-tree-id137 . -1) (#("i" 0 1 (fontified t)) . -37) (undo-tree-id138 . -1) (#("b" 0 1 (fontified t)) . -38) (undo-tree-id139 . -1) (#("u" 0 1 (fontified t)) . -39) (undo-tree-id140 . -1) (#("f" 0 1 (fontified t)) . -40) (undo-tree-id141 . -1) (#("f" 0 1 (fontified t)) . -41) (undo-tree-id142 . -1) (#("e" 0 1 (fontified t)) . -42) (undo-tree-id143 . -1) (#("r" 0 1 (fontified t)) . -43) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id145 . -1) (#("o" 0 1 (fontified t)) . -45) (undo-tree-id146 . -1) (#("r" 0 1 (fontified t)) . -46) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id148 . -1) (#("s" 0 1 (fontified t)) . -48) (undo-tree-id149 . -1) (#("o" 0 1 (fontified t)) . -49) (undo-tree-id150 . -1) (#("l" 0 1 (fontified t)) . -50) (undo-tree-id151 . -1) (#("e" 0 1 (fontified t)) . -51) (undo-tree-id152 . -1) (#(" " 0 1 (fontified t)) . -52) (undo-tree-id153 . -1) (#("o" 0 1 (fontified t)) . -53) (undo-tree-id154 . -1) (#("r" 0 1 (fontified t)) . -54) (undo-tree-id155 . -1) (#("d" 0 1 (fontified t)) . -55) (undo-tree-id156 . -1) 56) nil (25155 55204 586482 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face font-lock-constant-face)) . -14) (undo-tree-id115 . -1) (#(" " 0 1 (fontified t)) . -15) (undo-tree-id116 . -1) (#("A" 0 1 (fontified t face font-lock-type-face)) . -16) (undo-tree-id117 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -17) (undo-tree-id118 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -18) (undo-tree-id119 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -19) (undo-tree-id120 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -20) (undo-tree-id121 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -21) (undo-tree-id122 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -22) (undo-tree-id123 . -1) (#(" " 0 1 (fontified t)) . -23) (undo-tree-id124 . -1) (#("t" 0 1 (fontified t)) . -24) (undo-tree-id125 . -1) (#("o" 0 1 (fontified t)) . -25) (undo-tree-id126 . -1) (#(" " 0 1 (fontified t)) . -26) (undo-tree-id127 . -1) (#("d" 0 1 (fontified t)) . -27) (undo-tree-id128 . -1) (#("e" 0 1 (fontified t)) . -28) (undo-tree-id129 . -1) (#("l" 0 1 (fontified t)) . -29) (undo-tree-id130 . -1) (#("e" 0 1 (fontified t)) . -30) (undo-tree-id131 . -1) (#("t" 0 1 (fontified t)) . -31) (undo-tree-id132 . -1) (#("e" 0 1 (fontified t)) . -32) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -33) (undo-tree-id134 . -1) (#("m" 0 1 (fontified t)) . -34) (undo-tree-id135 . -1) 35) nil (25155 55204 586463 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1) (undo-tree-id102 . -1) (#("e" 0 1 (fontified t)) . -2) (undo-tree-id103 . -1) (#("l" 0 1 (fontified t)) . -3) (undo-tree-id104 . -1) (#("e" 0 1 (fontified t)) . -4) (undo-tree-id105 . -1) (#("t" 0 1 (fontified t)) . -5) (undo-tree-id106 . -1) (#("e" 0 1 (fontified t)) . -6) (undo-tree-id107 . -1) (#("-" 0 1 (fontified t)) . -7) (undo-tree-id108 . -1) (#("w" 0 1 (fontified t)) . -8) (undo-tree-id109 . -1) (#("i" 0 1 (fontified t)) . -9) (undo-tree-id110 . -1) (#("n" 0 1 (fontified t)) . -10) (undo-tree-id111 . -1) (#("d" 0 1 (fontified t)) . -11) (undo-tree-id112 . -1) (#("o" 0 1 (fontified t)) . -12) (undo-tree-id113 . -1) (#("w" 0 1 (fontified t)) . -13) (undo-tree-id114 . -1) 14) nil (25155 55204 586448 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 77 . 78) (nil fontified nil 77 . 78) (nil fontified nil 71 . 77) (nil fontified nil 70 . 71) (nil fontified nil 69 . 70) (nil fontified nil 47 . 69) (nil fontified nil 45 . 47) (nil fontified nil 23 . 45) (nil fontified nil 16 . 23) (nil fontified nil 1 . 16) (1 . 78)) nil (25155 55204 586441 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -57) (undo-tree-id81 . -1) (#("a" 0 1 (fontified t)) . -58) (undo-tree-id82 . -1) (#("r" 0 1 (fontified t)) . -59) (undo-tree-id83 . -1) (#("y" 0 1 (fontified t)) . -60) (undo-tree-id84 . -1) (#(" " 0 1 (fontified t)) . -61) (undo-tree-id85 . -1) (#("w" 0 1 (fontified t)) . -62) (undo-tree-id86 . -1) (#("i" 0 1 (fontified t)) . -63) (undo-tree-id87 . -1) (#("n" 0 1 (fontified t)) . -64) (undo-tree-id88 . -1) (#("d" 0 1 (fontified t)) . -65) (undo-tree-id89 . -1) (#("o" 0 1 (fontified t)) . -66) (undo-tree-id90 . -1) (#("w" 0 1 (fontified t)) . -67) (undo-tree-id91 . -1) (#(" " 0 1 (fontified t)) . -68) (undo-tree-id92 . -1) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -69) (undo-tree-id93 . -1) (#("2" 0 1 (fontified t face highlight-numbers-number)) . -70) (undo-tree-id94 . -1) (#(" " 0 1 (fontified t)) . -71) (undo-tree-id95 . -1) (#("t" 0 1 (fontified t)) . -72) (undo-tree-id96 . -1) (#("i" 0 1 (fontified t)) . -73) (undo-tree-id97 . -1) (#("m" 0 1 (fontified t)) . -74) (undo-tree-id98 . -1) (#("e" 0 1 (fontified t)) . -75) (undo-tree-id99 . -1) (#("s" 0 1 (fontified t)) . -76) (undo-tree-id100 . -1) (#("]" 0 1 (fontified t rear-nonsticky t face (rainbow-delimiters-depth-1-face))) . -77) (undo-tree-id101 . -1) 78) nil (25155 55204 586438 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -36) (undo-tree-id60 . -1) (#("i" 0 1 (fontified t)) . -37) (undo-tree-id61 . -1) (#("b" 0 1 (fontified t)) . -38) (undo-tree-id62 . -1) (#("u" 0 1 (fontified t)) . -39) (undo-tree-id63 . -1) (#("f" 0 1 (fontified t)) . -40) (undo-tree-id64 . -1) (#("f" 0 1 (fontified t)) . -41) (undo-tree-id65 . -1) (#("e" 0 1 (fontified t)) . -42) (undo-tree-id66 . -1) (#("r" 0 1 (fontified t)) . -43) (undo-tree-id67 . -1) (#(" " 0 1 (fontified t)) . -44) (undo-tree-id68 . -1) (#("o" 0 1 (fontified t)) . -45) (undo-tree-id69 . -1) (#("r" 0 1 (fontified t)) . -46) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t)) . -47) (undo-tree-id71 . -1) (#("s" 0 1 (fontified t)) . -48) (undo-tree-id72 . -1) (#("o" 0 1 (fontified t)) . -49) (undo-tree-id73 . -1) (#("l" 0 1 (fontified t)) . -50) (undo-tree-id74 . -1) (#("e" 0 1 (fontified t)) . -51) (undo-tree-id75 . -1) (#(" " 0 1 (fontified t)) . -52) (undo-tree-id76 . -1) (#("o" 0 1 (fontified t)) . -53) (undo-tree-id77 . -1) (#("r" 0 1 (fontified t)) . -54) (undo-tree-id78 . -1) (#("d" 0 1 (fontified t)) . -55) (undo-tree-id79 . -1) (#("i" 0 1 (fontified t)) . -56) (undo-tree-id80 . -1) 57) nil (25155 55204 586421 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -15) (undo-tree-id39 . -1) (#("A" 0 1 (fontified t face font-lock-type-face)) . -16) (undo-tree-id40 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -17) (undo-tree-id41 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -18) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -19) (undo-tree-id43 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -20) (undo-tree-id44 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -21) (undo-tree-id45 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -22) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -23) (undo-tree-id47 . -1) (#("t" 0 1 (fontified t)) . -24) (undo-tree-id48 . -1) (#("o" 0 1 (fontified t)) . -25) (undo-tree-id49 . -1) (#(" " 0 1 (fontified t)) . -26) (undo-tree-id50 . -1) (#("d" 0 1 (fontified t)) . -27) (undo-tree-id51 . -1) (#("e" 0 1 (fontified t)) . -28) (undo-tree-id52 . -1) (#("l" 0 1 (fontified t)) . -29) (undo-tree-id53 . -1) (#("e" 0 1 (fontified t)) . -30) (undo-tree-id54 . -1) (#("t" 0 1 (fontified t)) . -31) (undo-tree-id55 . -1) (#("e" 0 1 (fontified t)) . -32) (undo-tree-id56 . -1) (#(" " 0 1 (fontified t)) . -33) (undo-tree-id57 . -1) (#("m" 0 1 (fontified t)) . -34) (undo-tree-id58 . -1) (#("i" 0 1 (fontified t)) . -35) (undo-tree-id59 . -1) 36) nil (25155 55204 586405 0) 0 nil])
([nil nil ((#("require '.lib/dish'" 0 7 (fontified t face font-lock-builtin-face) 7 8 (fontified t) 8 19 (fontified t face font-lock-string-face)) . 1) (undo-tree-id16 . -19) (undo-tree-id17 . -19) (undo-tree-id18 . -19) (undo-tree-id19 . -19) (undo-tree-id20 . -19) (undo-tree-id21 . -19) (undo-tree-id22 . -19) (undo-tree-id23 . -18) (undo-tree-id24 . -19) (#("d" 0 1 (fontified t)) . -1) (undo-tree-id25 . -1) (#("e" 0 1 (fontified t)) . -2) (undo-tree-id26 . -1) (#("l" 0 1 (fontified t)) . -3) (undo-tree-id27 . -1) (#("e" 0 1 (fontified t)) . -4) (undo-tree-id28 . -1) (#("t" 0 1 (fontified t)) . -5) (undo-tree-id29 . -1) (#("e" 0 1 (fontified t)) . -6) (undo-tree-id30 . -1) (#("-" 0 1 (fontified t)) . -7) (undo-tree-id31 . -1) (#("w" 0 1 (fontified t)) . -8) (undo-tree-id32 . -1) (#("i" 0 1 (fontified t)) . -9) (undo-tree-id33 . -1) (#("n" 0 1 (fontified t)) . -10) (undo-tree-id34 . -1) (#("d" 0 1 (fontified t)) . -11) (undo-tree-id35 . -1) (#("o" 0 1 (fontified t)) . -12) (undo-tree-id36 . -1) (#("w" 0 1 (fontified t)) . -13) (undo-tree-id37 . -1) (#(":" 0 1 (fontified t face font-lock-constant-face)) . -14) (undo-tree-id38 . -1) 15) nil (25155 55204 586391 0) 0 nil])
([nil nil ((1 . 2)) nil (25155 55204 586379 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face highlight-numbers-number)) . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 2) nil (25155 55204 586378 0) 0 nil])
([nil nil ((1 . 3)) nil (25155 55204 586371 0) 0 nil])
([nil nil ((1 . 2) (#("d" 0 1 (fontified nil face font-lock-keyword-face)) . -1) (undo-tree-id1 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -2) (undo-tree-id2 . -1) 3) nil (25155 55204 586370 0) 0 nil])
([nil current ((#("2" 0 1 (fontified t face highlight-numbers-number)) . -1) (undo-tree-id0 . -1) 2) nil (25155 55204 586365 0) 0 nil])
nil
